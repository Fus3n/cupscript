
######## Lists #########


var l1 = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10.5, true, false, "some text", join_str]
print(l1) # >> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10.5, 1, 0, some text, <function join_str>

var third_elem = l1.2

print(third_elem) # >> 3

print(len(l1)) # >> 12

var f = l1.len(l1) - 1 


print(f) # >> <function join_str>

print(f(string1, string2, " ...... ")) # >> Hello ...... world

extend(l1, [1,2,3])

print(l1) # >> 1, 2, 3, 4, 5, 6, 7, 8, 9, 10.5, 1, 0, some text, <function join_str>, 1, 2, 3

append(l1, "end of list")

print(l1.len(l1) - 1) # >> end of list


######## Lists/function #########

# join is now a builtin function

res = join(", ", ["Hello", "world"])
print(res) # >> Hello, world

lambda_example = func (name) -> print("Hello ".name)

lambda_example("Cuppy")

######## bools/comparisons #########

# false = 0
# true = 1
# null = 0



print(is_func(join)) # >> 1
print(is_str(join)) # >> 0
print(is_str("Hello")) # >> 1
print(if is_num("1") == true then "true" else "false") # >> false
print (1 > 2) # >> 0
print(5 % 5 == 0)# >>  1
print(5 % 5 == 0 and 5 % 3 == 0) # >> 0
print(5 % 5 == 0 or 5 % 3 == 0) # >> 1
